//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: meta_event.proto

package metaeventpb

import (
	commonpb "github.com/LeslieKid/incubator-horaedb-proto/golang/pkg/commonpb"
	metaservicepb "github.com/LeslieKid/incubator-horaedb-proto/golang/pkg/metaservicepb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateShardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrShardInfo *metaservicepb.ShardInfo `protobuf:"bytes,1,opt,name=curr_shard_info,json=currShardInfo,proto3" json:"curr_shard_info,omitempty"`
}

func (x *UpdateShardInfo) Reset() {
	*x = UpdateShardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShardInfo) ProtoMessage() {}

func (x *UpdateShardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShardInfo.ProtoReflect.Descriptor instead.
func (*UpdateShardInfo) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateShardInfo) GetCurrShardInfo() *metaservicepb.ShardInfo {
	if x != nil {
		return x.CurrShardInfo
	}
	return nil
}

type OpenShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shard *metaservicepb.ShardInfo `protobuf:"bytes,1,opt,name=shard,proto3" json:"shard,omitempty"`
}

func (x *OpenShardRequest) Reset() {
	*x = OpenShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenShardRequest) ProtoMessage() {}

func (x *OpenShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenShardRequest.ProtoReflect.Descriptor instead.
func (*OpenShardRequest) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{1}
}

func (x *OpenShardRequest) GetShard() *metaservicepb.ShardInfo {
	if x != nil {
		return x.Shard
	}
	return nil
}

type OpenShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *commonpb.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *OpenShardResponse) Reset() {
	*x = OpenShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenShardResponse) ProtoMessage() {}

func (x *OpenShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenShardResponse.ProtoReflect.Descriptor instead.
func (*OpenShardResponse) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{2}
}

func (x *OpenShardResponse) GetHeader() *commonpb.ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type CloseShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint32 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *CloseShardRequest) Reset() {
	*x = CloseShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShardRequest) ProtoMessage() {}

func (x *CloseShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShardRequest.ProtoReflect.Descriptor instead.
func (*CloseShardRequest) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{3}
}

func (x *CloseShardRequest) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type CloseShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *commonpb.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *CloseShardResponse) Reset() {
	*x = CloseShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShardResponse) ProtoMessage() {}

func (x *CloseShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShardResponse.ProtoReflect.Descriptor instead.
func (*CloseShardResponse) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{4}
}

func (x *CloseShardResponse) GetHeader() *commonpb.ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type CreateTableOnShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateShardInfo  *UpdateShardInfo         `protobuf:"bytes,1,opt,name=update_shard_info,json=updateShardInfo,proto3" json:"update_shard_info,omitempty"`
	TableInfo        *metaservicepb.TableInfo `protobuf:"bytes,2,opt,name=table_info,json=tableInfo,proto3" json:"table_info,omitempty"`
	EncodedSchema    []byte                   `protobuf:"bytes,3,opt,name=encoded_schema,json=encodedSchema,proto3" json:"encoded_schema,omitempty"`
	Engine           string                   `protobuf:"bytes,4,opt,name=engine,proto3" json:"engine,omitempty"`
	CreateIfNotExist bool                     `protobuf:"varint,5,opt,name=create_if_not_exist,json=createIfNotExist,proto3" json:"create_if_not_exist,omitempty"`
	Options          map[string]string        `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateTableOnShardRequest) Reset() {
	*x = CreateTableOnShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableOnShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableOnShardRequest) ProtoMessage() {}

func (x *CreateTableOnShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableOnShardRequest.ProtoReflect.Descriptor instead.
func (*CreateTableOnShardRequest) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTableOnShardRequest) GetUpdateShardInfo() *UpdateShardInfo {
	if x != nil {
		return x.UpdateShardInfo
	}
	return nil
}

func (x *CreateTableOnShardRequest) GetTableInfo() *metaservicepb.TableInfo {
	if x != nil {
		return x.TableInfo
	}
	return nil
}

func (x *CreateTableOnShardRequest) GetEncodedSchema() []byte {
	if x != nil {
		return x.EncodedSchema
	}
	return nil
}

func (x *CreateTableOnShardRequest) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *CreateTableOnShardRequest) GetCreateIfNotExist() bool {
	if x != nil {
		return x.CreateIfNotExist
	}
	return false
}

func (x *CreateTableOnShardRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type CreateTableOnShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header             *commonpb.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	LatestShardVersion uint64                   `protobuf:"varint,2,opt,name=latest_shard_version,json=latestShardVersion,proto3" json:"latest_shard_version,omitempty"`
}

func (x *CreateTableOnShardResponse) Reset() {
	*x = CreateTableOnShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableOnShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableOnShardResponse) ProtoMessage() {}

func (x *CreateTableOnShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableOnShardResponse.ProtoReflect.Descriptor instead.
func (*CreateTableOnShardResponse) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTableOnShardResponse) GetHeader() *commonpb.ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CreateTableOnShardResponse) GetLatestShardVersion() uint64 {
	if x != nil {
		return x.LatestShardVersion
	}
	return 0
}

type DropTableOnShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateShardInfo *UpdateShardInfo         `protobuf:"bytes,1,opt,name=update_shard_info,json=updateShardInfo,proto3" json:"update_shard_info,omitempty"`
	TableInfo       *metaservicepb.TableInfo `protobuf:"bytes,2,opt,name=table_info,json=tableInfo,proto3" json:"table_info,omitempty"`
}

func (x *DropTableOnShardRequest) Reset() {
	*x = DropTableOnShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropTableOnShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTableOnShardRequest) ProtoMessage() {}

func (x *DropTableOnShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTableOnShardRequest.ProtoReflect.Descriptor instead.
func (*DropTableOnShardRequest) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{7}
}

func (x *DropTableOnShardRequest) GetUpdateShardInfo() *UpdateShardInfo {
	if x != nil {
		return x.UpdateShardInfo
	}
	return nil
}

func (x *DropTableOnShardRequest) GetTableInfo() *metaservicepb.TableInfo {
	if x != nil {
		return x.TableInfo
	}
	return nil
}

type DropTableOnShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header             *commonpb.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	LatestShardVersion uint64                   `protobuf:"varint,2,opt,name=latest_shard_version,json=latestShardVersion,proto3" json:"latest_shard_version,omitempty"`
}

func (x *DropTableOnShardResponse) Reset() {
	*x = DropTableOnShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropTableOnShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTableOnShardResponse) ProtoMessage() {}

func (x *DropTableOnShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTableOnShardResponse.ProtoReflect.Descriptor instead.
func (*DropTableOnShardResponse) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{8}
}

func (x *DropTableOnShardResponse) GetHeader() *commonpb.ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DropTableOnShardResponse) GetLatestShardVersion() uint64 {
	if x != nil {
		return x.LatestShardVersion
	}
	return 0
}

type OpenTableOnShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateShardInfo *UpdateShardInfo         `protobuf:"bytes,1,opt,name=update_shard_info,json=updateShardInfo,proto3" json:"update_shard_info,omitempty"`
	TableInfo       *metaservicepb.TableInfo `protobuf:"bytes,2,opt,name=table_info,json=tableInfo,proto3" json:"table_info,omitempty"`
}

func (x *OpenTableOnShardRequest) Reset() {
	*x = OpenTableOnShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenTableOnShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenTableOnShardRequest) ProtoMessage() {}

func (x *OpenTableOnShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenTableOnShardRequest.ProtoReflect.Descriptor instead.
func (*OpenTableOnShardRequest) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{9}
}

func (x *OpenTableOnShardRequest) GetUpdateShardInfo() *UpdateShardInfo {
	if x != nil {
		return x.UpdateShardInfo
	}
	return nil
}

func (x *OpenTableOnShardRequest) GetTableInfo() *metaservicepb.TableInfo {
	if x != nil {
		return x.TableInfo
	}
	return nil
}

type OpenTableOnShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *commonpb.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *OpenTableOnShardResponse) Reset() {
	*x = OpenTableOnShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenTableOnShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenTableOnShardResponse) ProtoMessage() {}

func (x *OpenTableOnShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenTableOnShardResponse.ProtoReflect.Descriptor instead.
func (*OpenTableOnShardResponse) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{10}
}

func (x *OpenTableOnShardResponse) GetHeader() *commonpb.ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type CloseTableOnShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateShardInfo *UpdateShardInfo         `protobuf:"bytes,1,opt,name=update_shard_info,json=updateShardInfo,proto3" json:"update_shard_info,omitempty"`
	TableInfo       *metaservicepb.TableInfo `protobuf:"bytes,2,opt,name=table_info,json=tableInfo,proto3" json:"table_info,omitempty"`
}

func (x *CloseTableOnShardRequest) Reset() {
	*x = CloseTableOnShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTableOnShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTableOnShardRequest) ProtoMessage() {}

func (x *CloseTableOnShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTableOnShardRequest.ProtoReflect.Descriptor instead.
func (*CloseTableOnShardRequest) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{11}
}

func (x *CloseTableOnShardRequest) GetUpdateShardInfo() *UpdateShardInfo {
	if x != nil {
		return x.UpdateShardInfo
	}
	return nil
}

func (x *CloseTableOnShardRequest) GetTableInfo() *metaservicepb.TableInfo {
	if x != nil {
		return x.TableInfo
	}
	return nil
}

type CloseTableOnShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *commonpb.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *CloseTableOnShardResponse) Reset() {
	*x = CloseTableOnShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTableOnShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTableOnShardResponse) ProtoMessage() {}

func (x *CloseTableOnShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTableOnShardResponse.ProtoReflect.Descriptor instead.
func (*CloseTableOnShardResponse) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{12}
}

func (x *CloseTableOnShardResponse) GetHeader() *commonpb.ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type SplitShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SplitShardRequest) Reset() {
	*x = SplitShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitShardRequest) ProtoMessage() {}

func (x *SplitShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitShardRequest.ProtoReflect.Descriptor instead.
func (*SplitShardRequest) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{13}
}

type SplitShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *commonpb.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *SplitShardResponse) Reset() {
	*x = SplitShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitShardResponse) ProtoMessage() {}

func (x *SplitShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitShardResponse.ProtoReflect.Descriptor instead.
func (*SplitShardResponse) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{14}
}

func (x *SplitShardResponse) GetHeader() *commonpb.ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type MergeShardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MergeShardsRequest) Reset() {
	*x = MergeShardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeShardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeShardsRequest) ProtoMessage() {}

func (x *MergeShardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeShardsRequest.ProtoReflect.Descriptor instead.
func (*MergeShardsRequest) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{15}
}

type MergeShardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *commonpb.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *MergeShardsResponse) Reset() {
	*x = MergeShardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeShardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeShardsResponse) ProtoMessage() {}

func (x *MergeShardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeShardsResponse.ProtoReflect.Descriptor instead.
func (*MergeShardsResponse) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{16}
}

func (x *MergeShardsResponse) GetHeader() *commonpb.ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ChangeShardRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeShardRoleRequest) Reset() {
	*x = ChangeShardRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeShardRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeShardRoleRequest) ProtoMessage() {}

func (x *ChangeShardRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeShardRoleRequest.ProtoReflect.Descriptor instead.
func (*ChangeShardRoleRequest) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{17}
}

type ChangeShardRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *commonpb.ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *ChangeShardRoleResponse) Reset() {
	*x = ChangeShardRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeShardRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeShardRoleResponse) ProtoMessage() {}

func (x *ChangeShardRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeShardRoleResponse.ProtoReflect.Descriptor instead.
func (*ChangeShardRoleResponse) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{18}
}

func (x *ChangeShardRoleResponse) GetHeader() *commonpb.ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ShardLockValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
}

func (x *ShardLockValue) Reset() {
	*x = ShardLockValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meta_event_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardLockValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardLockValue) ProtoMessage() {}

func (x *ShardLockValue) ProtoReflect() protoreflect.Message {
	mi := &file_meta_event_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardLockValue.ProtoReflect.Descriptor instead.
func (*ShardLockValue) Descriptor() ([]byte, []int) {
	return file_meta_event_proto_rawDescGZIP(), []int{19}
}

func (x *ShardLockValue) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

var File_meta_event_proto protoreflect.FileDescriptor

var file_meta_event_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x52, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x41, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x11,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x12,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x22, 0x94, 0x03, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x47, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x12, 0x2d, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x66, 0x5f, 0x6e, 0x6f,
	0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12,
	0x4c, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a,
	0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x17, 0x44, 0x72,
	0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36,
	0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7c, 0x0a, 0x18, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x47, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4a, 0x0a, 0x18, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x9b, 0x01,
	0x0a, 0x18, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x19, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a,
	0x12, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x13, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x22, 0x18, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x17, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x0e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f,
	0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x32, 0xb9, 0x06, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x4f, 0x70, 0x65,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x44,
	0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12,
	0x23, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x72, 0x6f,
	0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10,
	0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x12, 0x23, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a,
	0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x12, 0x24, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12,
	0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x1e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c,
	0x65, 0x73, 0x6c, 0x69, 0x65, 0x4b, 0x69, 0x64, 0x2f, 0x69, 0x6e, 0x63, 0x75, 0x62, 0x61, 0x74,
	0x6f, 0x72, 0x2d, 0x68, 0x6f, 0x72, 0x61, 0x65, 0x64, 0x62, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meta_event_proto_rawDescOnce sync.Once
	file_meta_event_proto_rawDescData = file_meta_event_proto_rawDesc
)

func file_meta_event_proto_rawDescGZIP() []byte {
	file_meta_event_proto_rawDescOnce.Do(func() {
		file_meta_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_meta_event_proto_rawDescData)
	})
	return file_meta_event_proto_rawDescData
}

var file_meta_event_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_meta_event_proto_goTypes = []interface{}{
	(*UpdateShardInfo)(nil),            // 0: meta_event.UpdateShardInfo
	(*OpenShardRequest)(nil),           // 1: meta_event.OpenShardRequest
	(*OpenShardResponse)(nil),          // 2: meta_event.OpenShardResponse
	(*CloseShardRequest)(nil),          // 3: meta_event.CloseShardRequest
	(*CloseShardResponse)(nil),         // 4: meta_event.CloseShardResponse
	(*CreateTableOnShardRequest)(nil),  // 5: meta_event.CreateTableOnShardRequest
	(*CreateTableOnShardResponse)(nil), // 6: meta_event.CreateTableOnShardResponse
	(*DropTableOnShardRequest)(nil),    // 7: meta_event.DropTableOnShardRequest
	(*DropTableOnShardResponse)(nil),   // 8: meta_event.DropTableOnShardResponse
	(*OpenTableOnShardRequest)(nil),    // 9: meta_event.OpenTableOnShardRequest
	(*OpenTableOnShardResponse)(nil),   // 10: meta_event.OpenTableOnShardResponse
	(*CloseTableOnShardRequest)(nil),   // 11: meta_event.CloseTableOnShardRequest
	(*CloseTableOnShardResponse)(nil),  // 12: meta_event.CloseTableOnShardResponse
	(*SplitShardRequest)(nil),          // 13: meta_event.SplitShardRequest
	(*SplitShardResponse)(nil),         // 14: meta_event.SplitShardResponse
	(*MergeShardsRequest)(nil),         // 15: meta_event.MergeShardsRequest
	(*MergeShardsResponse)(nil),        // 16: meta_event.MergeShardsResponse
	(*ChangeShardRoleRequest)(nil),     // 17: meta_event.ChangeShardRoleRequest
	(*ChangeShardRoleResponse)(nil),    // 18: meta_event.ChangeShardRoleResponse
	(*ShardLockValue)(nil),             // 19: meta_event.ShardLockValue
	nil,                                // 20: meta_event.CreateTableOnShardRequest.OptionsEntry
	(*metaservicepb.ShardInfo)(nil),    // 21: meta_service.ShardInfo
	(*commonpb.ResponseHeader)(nil),    // 22: common.ResponseHeader
	(*metaservicepb.TableInfo)(nil),    // 23: meta_service.TableInfo
}
var file_meta_event_proto_depIdxs = []int32{
	21, // 0: meta_event.UpdateShardInfo.curr_shard_info:type_name -> meta_service.ShardInfo
	21, // 1: meta_event.OpenShardRequest.shard:type_name -> meta_service.ShardInfo
	22, // 2: meta_event.OpenShardResponse.header:type_name -> common.ResponseHeader
	22, // 3: meta_event.CloseShardResponse.header:type_name -> common.ResponseHeader
	0,  // 4: meta_event.CreateTableOnShardRequest.update_shard_info:type_name -> meta_event.UpdateShardInfo
	23, // 5: meta_event.CreateTableOnShardRequest.table_info:type_name -> meta_service.TableInfo
	20, // 6: meta_event.CreateTableOnShardRequest.options:type_name -> meta_event.CreateTableOnShardRequest.OptionsEntry
	22, // 7: meta_event.CreateTableOnShardResponse.header:type_name -> common.ResponseHeader
	0,  // 8: meta_event.DropTableOnShardRequest.update_shard_info:type_name -> meta_event.UpdateShardInfo
	23, // 9: meta_event.DropTableOnShardRequest.table_info:type_name -> meta_service.TableInfo
	22, // 10: meta_event.DropTableOnShardResponse.header:type_name -> common.ResponseHeader
	0,  // 11: meta_event.OpenTableOnShardRequest.update_shard_info:type_name -> meta_event.UpdateShardInfo
	23, // 12: meta_event.OpenTableOnShardRequest.table_info:type_name -> meta_service.TableInfo
	22, // 13: meta_event.OpenTableOnShardResponse.header:type_name -> common.ResponseHeader
	0,  // 14: meta_event.CloseTableOnShardRequest.update_shard_info:type_name -> meta_event.UpdateShardInfo
	23, // 15: meta_event.CloseTableOnShardRequest.table_info:type_name -> meta_service.TableInfo
	22, // 16: meta_event.CloseTableOnShardResponse.header:type_name -> common.ResponseHeader
	22, // 17: meta_event.SplitShardResponse.header:type_name -> common.ResponseHeader
	22, // 18: meta_event.MergeShardsResponse.header:type_name -> common.ResponseHeader
	22, // 19: meta_event.ChangeShardRoleResponse.header:type_name -> common.ResponseHeader
	1,  // 20: meta_event.MetaEventService.OpenShard:input_type -> meta_event.OpenShardRequest
	3,  // 21: meta_event.MetaEventService.CloseShard:input_type -> meta_event.CloseShardRequest
	5,  // 22: meta_event.MetaEventService.CreateTableOnShard:input_type -> meta_event.CreateTableOnShardRequest
	7,  // 23: meta_event.MetaEventService.DropTableOnShard:input_type -> meta_event.DropTableOnShardRequest
	9,  // 24: meta_event.MetaEventService.OpenTableOnShard:input_type -> meta_event.OpenTableOnShardRequest
	11, // 25: meta_event.MetaEventService.CloseTableOnShard:input_type -> meta_event.CloseTableOnShardRequest
	13, // 26: meta_event.MetaEventService.SplitShard:input_type -> meta_event.SplitShardRequest
	15, // 27: meta_event.MetaEventService.MergeShards:input_type -> meta_event.MergeShardsRequest
	17, // 28: meta_event.MetaEventService.ChangeShardRole:input_type -> meta_event.ChangeShardRoleRequest
	2,  // 29: meta_event.MetaEventService.OpenShard:output_type -> meta_event.OpenShardResponse
	4,  // 30: meta_event.MetaEventService.CloseShard:output_type -> meta_event.CloseShardResponse
	6,  // 31: meta_event.MetaEventService.CreateTableOnShard:output_type -> meta_event.CreateTableOnShardResponse
	8,  // 32: meta_event.MetaEventService.DropTableOnShard:output_type -> meta_event.DropTableOnShardResponse
	10, // 33: meta_event.MetaEventService.OpenTableOnShard:output_type -> meta_event.OpenTableOnShardResponse
	12, // 34: meta_event.MetaEventService.CloseTableOnShard:output_type -> meta_event.CloseTableOnShardResponse
	14, // 35: meta_event.MetaEventService.SplitShard:output_type -> meta_event.SplitShardResponse
	16, // 36: meta_event.MetaEventService.MergeShards:output_type -> meta_event.MergeShardsResponse
	18, // 37: meta_event.MetaEventService.ChangeShardRole:output_type -> meta_event.ChangeShardRoleResponse
	29, // [29:38] is the sub-list for method output_type
	20, // [20:29] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_meta_event_proto_init() }
func file_meta_event_proto_init() {
	if File_meta_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_meta_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableOnShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableOnShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropTableOnShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropTableOnShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenTableOnShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenTableOnShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTableOnShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTableOnShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeShardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeShardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeShardRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeShardRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meta_event_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardLockValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meta_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meta_event_proto_goTypes,
		DependencyIndexes: file_meta_event_proto_depIdxs,
		MessageInfos:      file_meta_event_proto_msgTypes,
	}.Build()
	File_meta_event_proto = out.File
	file_meta_event_proto_rawDesc = nil
	file_meta_event_proto_goTypes = nil
	file_meta_event_proto_depIdxs = nil
}
